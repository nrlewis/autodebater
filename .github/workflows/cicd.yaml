name: CI CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  lint:
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint
      - name: Analysing the code with pylint
        run: |
          pylint src tests
  unit-test:
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    needs: lint
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry 
          poetry install
      - name: Run Coverall
        run: |
          poetry run coverage run --source=src -m pytest -m 'not integration'
          poetry run coveralls
  release:
    needs: unit-test
    runs-on: ubuntu-latest
    concurrency: release
    permissions:
      id-token: write
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Python Semantic Release
        uses: python-semantic-release/python-semantic-release@v9.8.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip" # caching pip dependencies
      - name: Install poetry
        run: pip install --upgrade pip poetry
      - name: Install dependencies
        run: poetry install
      - name: Ensure dist directory
        run: |
          mkdir -p dist
          chmod -R 777 dist
      - name: Build
        id: build
        run: poetry build

      - name: Publish package to GitHub Release
        if: steps.build.outcome == 'success'
        uses: python-semantic-release/upload-to-gh-release@v9.8.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.release.outputs.tag }}

      - name: Publish package distributions to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: steps.build.outcome == 'success' && github.ref_type == 'tag'
        with:
          repository-url: https://test.pypi.org/legacy/

      # - name: Publish package to PyPI
      #   uses: pypa/gh-action-pypi-publish@v1
      #   if: steps.release.outputs.released == 'true'
